document.addEventListener("DOMContentLoaded",function(){function e(e){const t=document.getElementById("search-container");if(!e||!t)return;const n=e.groups.map((e,t)=>`<div class="category-tab ${0===t?"active":""}" data-category="${e.name}">${e.name}</div>`).join(""),o=e.providers.map((e,t)=>{const n=e.items.map(e=>`<div class="provider-item" data-id="${e.id}">${e.name}</div>`).join("");return`<div class="provider-list ${0===t?"active":""}" data-category-content="${e.groupName}">${n}</div>`}).join(""),a=`\n            <div class="search-bar" id="search-bar">\n                <div class="selected-engine" id="selected-engine"></div>\n                <input type="text" id="search-text" autocomplete="off">\n                <button type="submit"><i class="ti ti-search"></i></button>\n            </div>\n            <div class="search-options-panel" id="search-options-panel">\n                <div class="search-categories">${n}</div>\n                <div class="search-providers">${o}</div>\n            </div>\n        `;t.innerHTML=a}function t(e){const t=document.getElementById("dynamic-content-container");if(!e||!t)return;const n=e.map(e=>{const t=e.items.map(e=>{let t="images/browser.svg";try{const n=new URL(e.url).hostname;t=`https://api.xinac.net/icon/?url=${n}`}catch(t){console.warn(`无效的URL，无法生成图标: ${e.url}`)}return`\n                    <div class="col-6 col-sm-6 col-md-4 col-lg-3 col-xl-2w col-xxl-2">\n                        <div class="w-widget box2" onclick="window.open('${e.url}', '_blank')" data-bs-toggle="tooltip" data-bs-placement="bottom" title="${e.url}">\n                            <div class="w-comment-entry">\n                                <a><img data-src="${t}" class="lozad img-circle" onerror="this.onerror=null;this.src='images/browser.svg';"></a>\n                                <div class="w-comment">\n                                    <a class="overflowClip_1"><strong>${e.title}</strong></a>\n                                    <p class="overflowClip_2">${e.description}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                `}).join("");return`<h6 class="tag"><i class="ti ti-tag" id="${e.categoryName}"></i>${e.categoryName}</h6><div class="row">${t}</div><br />`}).join("");t.innerHTML=n}function n(e){const t={form:document.getElementById("super-search-fm"),container:document.getElementById("search-container"),bar:document.getElementById("search-bar"),input:document.getElementById("search-text"),engineDisplay:document.getElementById("selected-engine"),panel:document.getElementById("search-options-panel"),categoryTabsContainer:document.querySelector(".search-categories"),providerListsContainer:document.querySelector(".search-providers")};if(Object.values(t).some(e=>!e))return void console.error("关键搜索元素未在DOM中找到，无法绑定事件。");const n=new Map;e.providers.forEach(e=>{e.items.forEach(e=>n.set(e.id,e))});const o=e=>{const a=n.get(e);if(a)t.input.placeholder=a.placeholder,t.form.action=a.url,t.engineDisplay.innerHTML=`<div class="icon-wrapper">${a.name}</div>`,t.panel.querySelectorAll(".provider-item").forEach(t=>{t.classList.toggle("selected",t.dataset.id===e)}),localStorage.setItem("searchEngineId",e);else{const e=n.values().next().value;e&&o(e.id)}};t.engineDisplay.addEventListener("click",e=>{t.panel.classList.toggle("active"),t.bar.classList.toggle("focused"),e.stopPropagation()}),document.addEventListener("click",e=>{t.container.contains(e.target)||(t.panel.classList.remove("active"),t.bar.classList.remove("focused"))}),t.panel.addEventListener("click",e=>{const n=e.target.closest(".category-tab");if(n){const e=n.dataset.category;t.categoryTabsContainer.querySelectorAll(".category-tab").forEach(e=>e.classList.remove("active")),n.classList.add("active"),t.providerListsContainer.querySelectorAll(".provider-list").forEach(t=>{t.classList.toggle("active",t.dataset.categoryContent===e)})}const a=e.target.closest(".provider-item");a&&(o(a.dataset.id),t.input.focus(),t.panel.classList.remove("active"),t.bar.classList.remove("focused"))}),t.form.addEventListener("submit",e=>{e.preventDefault();const n=t.input.value.trim();if(n){const e=`${t.form.action}${encodeURIComponent(n)}`;window.open(e,"_blank")}});const a=localStorage.getItem("searchEngineId");if(a&&n.has(a)){o(a);n.get(a);const t=e.providers.find(e=>e.items.some(e=>e.id===a));if(t){const e=document.querySelector(`.category-tab[data-category="${t.groupName}"]`);e&&e.click()}}else{const e=n.values().next().value;if(e){o(e.id);const t=document.querySelector(".category-tab");t&&t.click()}}}function o(){if("function"==typeof lozad){const e=lozad();e.observe()}if("undefined"!=typeof bootstrap){const e=Array.from(document.querySelectorAll('[data-bs-toggle="tooltip"]'));e.forEach(e=>{new bootstrap.Tooltip(e)})}}fetch("js/data.json").then(e=>{if(!e.ok)throw new Error(`HTTP 错误！状态: ${e.status}. 无法加载 'js/data.json'`);return e.json()}).then(a=>{if(!a||!a.searchConfig||!a.categories)throw new Error("JSON 数据格式不正确或缺少必要的配置部分。");e(a.searchConfig),t(a.categories),n(a.searchConfig),o()}).catch(e=>{console.error("严重错误:",e);const t=document.getElementById("dynamic-content-container");t&&(t.innerHTML='<p style="text-align: center; color: red;">加载内容失败！请按F12查看控制台中的详细错误信息。</p>')})});