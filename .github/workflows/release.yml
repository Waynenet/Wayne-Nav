name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous tag
        id: previous_tag
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ || echo "")
          echo "previous_tag=$PREV_TAG" >> $GITHUB_OUTPUT

      - name: Generate grouped changelog
        id: changelog
        run: |
          echo "changelog<<EOF" >> $GITHUB_ENV

          COMMITS=$(if [ -z "${{ steps.previous_tag.outputs.previous_tag }}" ]; then
                      git log --pretty=format:"%s (%h)"
                    else
                      git log --pretty=format:"%s (%h)" ${{ steps.previous_tag.outputs.previous_tag }}..HEAD
                    fi)

          # 定义提交类型和对应标题
          declare -A TYPE_TITLE=(
            [feat]="### 🚀 新增功能"
            [fix]="### 🐞 Bug修复"
            [docs]="### 📝 文档变更"
            [ci]="### 🔧 CI变更"
            [chore]="### ✨ 杂项变动"
            [refactor]="### 🦄 代码重构"
            [style]="### 🌈 格式变动"
            [build]="### 🛠️ 依赖变更"
          )
          
          # 遍历所有类型
          for type in "${!TYPE_TITLE[@]}"; do
            COMMITS_BY_TYPE=$(echo "$COMMITS" | grep -i "^[^a-zA-Z0-9]*$type:")
          
            if [ -n "$COMMITS_BY_TYPE" ]; then
              {
                echo -e "${TYPE_TITLE[$type]}"
                echo "$COMMITS_BY_TYPE" | sed "s/^[^a-zA-Z0-9]*$type:/- /i"
              } >> $GITHUB_ENV
            fi
          done
          
          # 处理未分类的提交
          OTHER_COMMITS=$(echo "$COMMITS" | grep -viE '^[^a-zA-Z0-9]*(feat|fix|docs|ci|chore|refactor|style|build):')
          if [ -n "$OTHER_COMMITS" ]; then
            {
              echo -e "### 🎨 其他修改"
              echo "$OTHER_COMMITS" | sed 's/^/- /'
            } >> $GITHUB_ENV
          fi

          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: ${{ env.changelog }}
          make_latest: true